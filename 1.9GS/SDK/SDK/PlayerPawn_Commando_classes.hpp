#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PlayerPawn_Commando

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "PlayerPawn_Generic_classes.hpp"
#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass PlayerPawn_Commando.PlayerPawn_Commando_C
// 0x0140 (0x1DE0 - 0x1CA0)
class APlayerPawn_Commando_C final : public APlayerPawn_Generic_C
{
public:
	uint8                                         Pad_1C94[0x4];                                     // 0x1C94(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame_PlayerPawn_Commando_C;              // 0x1C98(0x0008)(Transient, DuplicateTransient)
	class USkeletalMeshComponent*                 TargetHead;                                        // 0x1CA0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 TargetBody;                                        // 0x1CA8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInterface*>             PawnHeadMaterials_0;                               // 0x1CB0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<class UMaterialInterface*>             PawnBodyMaterials_0;                               // 0x1CC0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	class UParticleSystem*                        P_IncendiaryRound;                                 // 0x1CD0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        P_MakeItRain;                                      // 0x1CD8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  TC_FlakVest;                                       // 0x1CE0(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayEventData                     Event_Data;                                        // 0x1D00(0x00A8)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTag                           EventSpawnEffect;                                  // 0x1DA8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         ShockwaveRefractionRingHeight;                     // 0x1DB0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DB4[0x4];                                     // 0x1DB4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        P_Shockwave;                                       // 0x1DB8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UForceFeedbackEffect*                   ShockwaveForceFeedback;                            // 0x1DC0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 ShockwaveCameraShake;                              // 0x1DC8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsMale;                                            // 0x1DD0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1DD1[0x7];                                     // 0x1DD1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_GoinCommandoWeapon_C*                MenuGoingCommandowWeapon;                          // 0x1DD8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_PlayerPawn_Commando(int32 EntryPoint);
	void GameplayCue_Abilities_Applied_Commando_MakeItRain(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void CheckForGameState();
	void ReceiveDestroyed();
	void SelectPawn(class UAnimInstance* AnimInst);
	void ReceiveBeginPlay();
	void SetMenuScreenClassName();
	void GameplayCue_Abilities_Applied_Commando_IncendiaryRounds(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void GameplayCue_Abilities_Activation_Generic_HarvestBuff_Tier1(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void GameplayCue_Abilities_Activation_Generic_HarvestBuff_Tier2(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void GameplayCue_Abilities_Activation_Commando_Shockwave(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void ReceivePossessed(class AController* NewController);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"PlayerPawn_Commando_C">();
	}
	static class APlayerPawn_Commando_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<APlayerPawn_Commando_C>();
	}
};
static_assert(alignof(APlayerPawn_Commando_C) == 0x000010, "Wrong alignment on APlayerPawn_Commando_C");
static_assert(sizeof(APlayerPawn_Commando_C) == 0x001DE0, "Wrong size on APlayerPawn_Commando_C");
static_assert(offsetof(APlayerPawn_Commando_C, UberGraphFrame_PlayerPawn_Commando_C) == 0x001C98, "Member 'APlayerPawn_Commando_C::UberGraphFrame_PlayerPawn_Commando_C' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Commando_C, TargetHead) == 0x001CA0, "Member 'APlayerPawn_Commando_C::TargetHead' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Commando_C, TargetBody) == 0x001CA8, "Member 'APlayerPawn_Commando_C::TargetBody' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Commando_C, PawnHeadMaterials_0) == 0x001CB0, "Member 'APlayerPawn_Commando_C::PawnHeadMaterials_0' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Commando_C, PawnBodyMaterials_0) == 0x001CC0, "Member 'APlayerPawn_Commando_C::PawnBodyMaterials_0' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Commando_C, P_IncendiaryRound) == 0x001CD0, "Member 'APlayerPawn_Commando_C::P_IncendiaryRound' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Commando_C, P_MakeItRain) == 0x001CD8, "Member 'APlayerPawn_Commando_C::P_MakeItRain' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Commando_C, TC_FlakVest) == 0x001CE0, "Member 'APlayerPawn_Commando_C::TC_FlakVest' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Commando_C, Event_Data) == 0x001D00, "Member 'APlayerPawn_Commando_C::Event_Data' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Commando_C, EventSpawnEffect) == 0x001DA8, "Member 'APlayerPawn_Commando_C::EventSpawnEffect' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Commando_C, ShockwaveRefractionRingHeight) == 0x001DB0, "Member 'APlayerPawn_Commando_C::ShockwaveRefractionRingHeight' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Commando_C, P_Shockwave) == 0x001DB8, "Member 'APlayerPawn_Commando_C::P_Shockwave' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Commando_C, ShockwaveForceFeedback) == 0x001DC0, "Member 'APlayerPawn_Commando_C::ShockwaveForceFeedback' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Commando_C, ShockwaveCameraShake) == 0x001DC8, "Member 'APlayerPawn_Commando_C::ShockwaveCameraShake' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Commando_C, IsMale) == 0x001DD0, "Member 'APlayerPawn_Commando_C::IsMale' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Commando_C, MenuGoingCommandowWeapon) == 0x001DD8, "Member 'APlayerPawn_Commando_C::MenuGoingCommandowWeapon' has a wrong offset!");

}

